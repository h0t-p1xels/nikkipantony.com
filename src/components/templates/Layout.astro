---
import "@fontsource/ibm-plex-mono/600.css"
import "@fontsource/ibm-plex-mono/700.css"
import "@fontsource-variable/pixelify-sans"
import { Theme } from "@radix-ui/themes"
import "@radix-ui/themes/styles.css"
import "../ally/tokens.css"
import "../ally/theme.css"
import Button from "../atoms/Button/Button"
---

<!doctype html>
<html lang="en" data-theme="light">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />

		<!-- meta tags generated via https://www.opengraph.xyz -->
		<title>
			Nikki PANTONY - digital product designer / developer @
			weareseed.studio based in Whitley Bay, UK.
		</title>
		<meta
			name="description"
			content="I'm passionate about designing and building fast, secure and scalable digital products that achieve business goals, build value and convert visitors to customers."
		/>

		<!-- facebook meta tags -->
		<meta
			property="og:url"
			content="https://nikkipantony.com"
		/>
		<meta property="og:type" content="website" />
		<meta
			property="og:title"
			content="Nikki PANTONY - digital product designer / developer."
		/>
		<meta
			property="og:description"
			content="I'm passionate about designing and building fast, secure and scalable digital products that achieve business goals, build value and convert visitors to customers."
		/>
		<meta
			property="og:image"
			content="/preview-image.png"
		/>

		<!-- x meta tags -->
		<meta
			name="twitter:card"
			content="summary_large_image"
		/>
		<meta
			property="twitter:domain"
			content="nikkipantony.com"
		/>
		<meta
			property="twitter:url"
			content="https://nikkipantony.com"
		/>
		<meta
			name="twitter:title"
			content="Nikki PANTONY - digital product designer / developer."
		/>
		<meta
			name="twitter:description"
			content="I'm passionate about designing and building fast, secure and scalable digital products that achieve business goals, build value and convert visitors to customers."
		/>
		<meta
			name="twitter:image"
			content="/preview-image.png"
		/>

		<!-- favicons generated via https://favicon.io/favicon-generator -->
		<link
			rel="apple-touch-icon"
			sizes="180x180"
			href="/apple-touch-icon.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="32x32"
			href="/favicon-32x32.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="16x16"
			href="/favicon-16x16.png"
		/>
		<link rel="manifest" href="/site.webmanifest" />
		<meta name="generator" content={Astro.generator} />
	</head>
	<body>
		<Theme
			accentColor="indigo"
			radius="medium"
			panelBackground="solid"
			scaling="100%"
		>
			<div
				style={{
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					display: "flex",
					justifyContent: "end",
					padding: "20px"
				}}
			>
				<Button
					data-theme-toggle
					aria-label="turn dark mode on"
				>
					light mode
				</Button>
			</div>
			<slot />
			<footer>
				<p>
					<small>
						<strong>
							<span class="symbol">&copy;</span>{" "}
							{new Date().getFullYear()}
						</strong>
					</small>
				</p>
			</footer>
		</Theme>
	</body>

	<script>
		// dark mode utility
		// original source code: https://dev.to/whitep4nth3r/the-best-lightdark-mode-theme-toggle-in-javascript-368f
		function calculateSettingAsThemeString({
			localStorageTheme,
			systemSettingDark
		}) {
			if (localStorageTheme !== null) {
				return localStorageTheme
			}

			if (systemSettingDark.matches) {
				return "dark"
			}

			return "light"
		}

		// update the button text and aria-label
		function updateButton({ buttonEl, isDark }) {
			// update button aria-lable
			const updateLabel = isDark
				? "turn light mode on"
				: "turn dark mode on"

			// update button text
			const updateText = isDark ? "dark mode" : "light mode"

			buttonEl.setAttribute("aria-label", updateLabel)
			buttonEl.innerText = updateText
		}

		// Update the theme settings on the `html` page element
		function updateThemeOnHtmlEl({ theme }) {
			document
				.querySelector("html")
				.setAttribute("data-theme", theme)
		}

		// on page load get button element
		const button = document.querySelector(
			"[data-theme-toggle]"
		)
		// on page load get value for theme if previously set in local storage
		const localStorageTheme = localStorage.getItem("theme")

		// on page load see if users has set thier prefered color scheme to `dark`
		const systemSettingDark = window.matchMedia(
			"(prefers-color-scheme: dark)"
		)

		// store current theme setting as a string
		let currentThemeSetting = calculateSettingAsThemeString(
			{
				localStorageTheme,
				systemSettingDark
			}
		)

		// update the theme settings and button text accoridng to current setting
		updateButton({
			buttonEl: button,
			isDark: currentThemeSetting === "dark"
		})
		updateThemeOnHtmlEl({ theme: currentThemeSetting })

		// event listener to toggle the colour theme between light and dark
		button.addEventListener("click", event => {
			const newTheme =
				currentThemeSetting === "dark" ? "light" : "dark"

			localStorage.setItem("theme", newTheme)
			updateButton({
				buttonEl: button,
				isDark: newTheme === "dark"
			})
			updateThemeOnHtmlEl({ theme: newTheme })

			currentThemeSetting = newTheme
		})
	</script>
</html>
